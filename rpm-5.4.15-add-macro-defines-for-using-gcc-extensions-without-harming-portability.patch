--- rpm-5.4.15/lib/rpm46compat.h.gnuext~	2014-12-18 06:12:12.828072036 +0100
+++ rpm-5.4.15/lib/rpm46compat.h	2014-12-18 06:12:45.897981417 +0100
@@ -271,7 +271,7 @@ static inline void initSourceHeader_RPMo
 
 static inline int parseSpec_RPMorg(rpmts ts, const char * specFile,
 		const char * rootDir,
-		__attribute__((unused)) const char * buildRoot,
+		RPM_GNUC_UNUSED const char * buildRoot,
 		int recursing,
 		const char * passPhrase,
 		const char * cookie,
--- rpm-5.4.15/lib/rpm4compat.h.gnuext~	2014-12-18 06:13:26.361015430 +0100
+++ rpm-5.4.15/lib/rpm4compat.h	2014-12-18 06:25:07.453320688 +0100
@@ -301,13 +301,13 @@ static inline HeaderIterator headerInitI
 	return headerInit(h);
 }
 
-static inline void * headerFreeData(const void * data, __attribute__((unused)) rpmTagType type) {
+static inline void * headerFreeData(const void * data, RPM_GNUC_UNUSED rpmTagType type) {
 	if (data)
 		free((void *)data);
 	return NULL;
 }
 
-static inline int headerWrite(void * _fd, Header h, __attribute__((unused)) enum hMagic magicp) {
+static inline int headerWrite(void * _fd, Header h, RPM_GNUC_UNUSED enum hMagic magicp) {
 	const char item[] = "Header";
 	const char * msg = NULL;
 	rpmRC rc = rpmpkgWrite(item, (FD_t)_fd, h, &msg);
@@ -319,7 +319,7 @@ static inline int headerWrite(void * _fd
 	return rc;
 }
 
-static inline Header headerRead(void * _fd, __attribute__((unused)) enum hMagic magicp) {
+static inline Header headerRead(void * _fd, RPM_GNUC_UNUSED enum hMagic magicp) {
 	const char item[] = "Header";
 	Header h = NULL;
 	const char * msg = NULL;
@@ -336,7 +336,7 @@ static inline Header headerRead(void * _
 	return h;
 }
 
-static inline int rpmMachineScore(__attribute__((unused)) int type, const char * name) {
+static inline int rpmMachineScore(RPM_GNUC_UNUSED int type, const char * name) {
 	char * platform = rpmExpand(name, "-%{_target_vendor}-%{_target_os}%{?_gnu}", NULL);
 	int score = rpmPlatformScore(platform, NULL, 0);
 
--- rpm-5.4.15/lib/rpmds.h.gnuext~	2014-12-18 06:23:51.540668869 +0100
+++ rpm-5.4.15/lib/rpmds.h	2014-12-18 06:11:10.687610967 +0100
@@ -810,6 +810,7 @@ int rpmdsPrintClosure(/*@null@*/ rpmds P
 	/*@globals fileSystem @*/
 	/*@modifies P, R, *fp, fileSystem @*/
 {
+    RPM_GNUC_UNUSED \
     int rc;
 
     /* Allocate the R results array (to be filled in by rpmdsSearch). */
--- rpm-5.4.15/lib/rpmts.h.gnuext~	2014-12-18 06:23:00.803617069 +0100
+++ rpm-5.4.15/lib/rpmts.h	2014-12-18 06:09:58.809542758 +0100
@@ -470,7 +470,7 @@ int rpmtsOpenDB(rpmts ts, int dbmode)
  * @return		0 on success
  */
 static inline /*@unused@*/
-int rpmtsInitDB(/*@unused@*/ rpmts ts, /*@unused@*/ int dbmode)
+int rpmtsInitDB(/*@unused@*/ RPM_GNUC_UNUSED rpmts ts, /*@unused@*/  RPM_GNUC_UNUSED int dbmode)
 	/*@*/
 {
     return -1;
@@ -492,7 +492,7 @@ int rpmtsRebuildDB(rpmts ts)
  * @return		0 on success
  */
 static inline /*@unused@*/
-int rpmtsVerifyDB(/*@unused@*/ rpmts ts)
+int rpmtsVerifyDB(/*@unused@*/ RPM_GNUC_UNUSED rpmts ts)
 	/*@*/
 {
     return -1;
--- rpm-5.4.15/rpmdb/rpmtypes.h.gnuext~	2014-12-18 06:01:50.597373518 +0100
+++ rpm-5.4.15/rpmdb/rpmtypes.h	2014-12-18 06:26:09.167642882 +0100
@@ -5,6 +5,223 @@
  * \file rpmdb/rpmtypes.h
  */
 
+/*
+ * Miscellaneous utility macros:
+ * - portability wrappers for various gcc extensions like __attribute__()
+ * - ...
+ *
+ * Copied from glib, names replaced to avoid clashing with glib.
+ *
+ */
+
+/* Here we provide RPM_GNUC_EXTENSION as an alias for __extension__,
+ * where this is valid. This allows for warningless compilation of
+ * "long long" types even in the presence of '-ansi -pedantic'. 
+ */
+#if     __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 8)
+#  define RPM_GNUC_EXTENSION __extension__
+#else
+#  define RPM_GNUC_EXTENSION
+#endif
+
+/* Provide macros to feature the GCC function attribute.
+ */
+#if    __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 96)
+#define RPM_GNUC_PURE                            \
+  __attribute__((__pure__))
+#define RPM_GNUC_MALLOC    			\
+  __attribute__((__malloc__))
+#else
+#define RPM_GNUC_PURE
+#define RPM_GNUC_MALLOC
+#endif
+
+#if     (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3)
+#define RPM_GNUC_ALLOC_SIZE(x) __attribute__((__alloc_size__(x)))
+#define RPM_GNUC_ALLOC_SIZE2(x,y) __attribute__((__alloc_size__(x,y)))
+#else
+#define RPM_GNUC_ALLOC_SIZE(x)
+#define RPM_GNUC_ALLOC_SIZE2(x,y)
+#endif
+
+#if     __GNUC__ >= 4
+#define RPM_GNUC_NULL_TERMINATED __attribute__((__sentinel__))
+#else
+#define RPM_GNUC_NULL_TERMINATED
+#endif
+
+#if     __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ > 4)
+#define RPM_GNUC_PRINTF( format_idx, arg_idx )    \
+  __attribute__((__format__ (__printf__, format_idx, arg_idx)))
+#define RPM_GNUC_SCANF( format_idx, arg_idx )     \
+  __attribute__((__format__ (__scanf__, format_idx, arg_idx)))
+#define RPM_GNUC_FORMAT( arg_idx )                \
+  __attribute__((__format_arg__ (arg_idx)))
+#define RPM_GNUC_NORETURN                         \
+  __attribute__((__noreturn__))
+#define RPM_GNUC_CONST                            \
+  __attribute__((__const__))
+#define RPM_GNUC_UNUSED                           \
+  __attribute__((__unused__))
+#define RPM_GNUC_NO_INSTRUMENT			\
+  __attribute__((__no_instrument_function__))
+#else   /* !__GNUC__ */
+#define RPM_GNUC_PRINTF( format_idx, arg_idx )
+#define RPM_GNUC_SCANF( format_idx, arg_idx )
+#define RPM_GNUC_FORMAT( arg_idx )
+#define RPM_GNUC_NORETURN
+#define RPM_GNUC_CONST
+#define RPM_GNUC_UNUSED
+#define RPM_GNUC_NO_INSTRUMENT
+#endif  /* !__GNUC__ */
+
+#if    __GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 1)
+#define RPM_GNUC_DEPRECATED                            \
+  __attribute__((__deprecated__))
+#else
+#define RPM_GNUC_DEPRECATED
+#endif /* __GNUC__ */
+
+#if     __GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 3)
+#define RPM_GNUC_MAY_ALIAS __attribute__((may_alias))
+#define RPM_GNUC_NONNULL( ... )	\
+  __attribute__((__nonnull__ (__VA_ARGS__)))
+#else
+#define RPM_GNUC_MAY_ALIAS
+#define RPM_GNUC_NONNULL( ... )
+#endif
+
+#if    __GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
+#define RPM_GNUC_WARN_UNUSED_RESULT 		\
+  __attribute__((warn_unused_result))
+#else
+#define RPM_GNUC_WARN_UNUSED_RESULT
+#endif /* __GNUC__ */
+
+#if    __GNUC__ >= 4 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 3)
+#  define RPM_GNUC_INTERNAL __attribute__((visibility("hidden")))
+#else
+#  define RPM_GNUC_INTERNAL
+#endif
+
+
+/* Guard C code in headers, while including them from C++ */
+#ifdef  __cplusplus
+# define RPM_BEGIN_DECLS  extern "C" {
+# define RPM_END_DECLS    }
+#else
+# define RPM_BEGIN_DECLS
+# define RPM_END_DECLS
+#endif
+/*
+ * Miscellaneous utility macros:
+ * - portability wrappers for various gcc extensions like __attribute__()
+ * - ...
+ *
+ * Copied from glib, names replaced to avoid clashing with glib.
+ *
+ */
+
+/* Here we provide RPM_GNUC_EXTENSION as an alias for __extension__,
+ * where this is valid. This allows for warningless compilation of
+ * "long long" types even in the presence of '-ansi -pedantic'. 
+ */
+#if     __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 8)
+#  define RPM_GNUC_EXTENSION __extension__
+#else
+#  define RPM_GNUC_EXTENSION
+#endif
+
+/* Provide macros to feature the GCC function attribute.
+ */
+#if    __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 96)
+#define RPM_GNUC_PURE                            \
+  __attribute__((__pure__))
+#define RPM_GNUC_MALLOC    			\
+  __attribute__((__malloc__))
+#else
+#define RPM_GNUC_PURE
+#define RPM_GNUC_MALLOC
+#endif
+
+#if     (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3)
+#define RPM_GNUC_ALLOC_SIZE(x) __attribute__((__alloc_size__(x)))
+#define RPM_GNUC_ALLOC_SIZE2(x,y) __attribute__((__alloc_size__(x,y)))
+#else
+#define RPM_GNUC_ALLOC_SIZE(x)
+#define RPM_GNUC_ALLOC_SIZE2(x,y)
+#endif
+
+#if     __GNUC__ >= 4
+#define RPM_GNUC_NULL_TERMINATED __attribute__((__sentinel__))
+#else
+#define RPM_GNUC_NULL_TERMINATED
+#endif
+
+#if     __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ > 4)
+#define RPM_GNUC_PRINTF( format_idx, arg_idx )    \
+  __attribute__((__format__ (__printf__, format_idx, arg_idx)))
+#define RPM_GNUC_SCANF( format_idx, arg_idx )     \
+  __attribute__((__format__ (__scanf__, format_idx, arg_idx)))
+#define RPM_GNUC_FORMAT( arg_idx )                \
+  __attribute__((__format_arg__ (arg_idx)))
+#define RPM_GNUC_NORETURN                         \
+  __attribute__((__noreturn__))
+#define RPM_GNUC_CONST                            \
+  __attribute__((__const__))
+#define RPM_GNUC_UNUSED                           \
+  __attribute__((__unused__))
+#define RPM_GNUC_NO_INSTRUMENT			\
+  __attribute__((__no_instrument_function__))
+#else   /* !__GNUC__ */
+#define RPM_GNUC_PRINTF( format_idx, arg_idx )
+#define RPM_GNUC_SCANF( format_idx, arg_idx )
+#define RPM_GNUC_FORMAT( arg_idx )
+#define RPM_GNUC_NORETURN
+#define RPM_GNUC_CONST
+#define RPM_GNUC_UNUSED
+#define RPM_GNUC_NO_INSTRUMENT
+#endif  /* !__GNUC__ */
+
+#if    __GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 1)
+#define RPM_GNUC_DEPRECATED                            \
+  __attribute__((__deprecated__))
+#else
+#define RPM_GNUC_DEPRECATED
+#endif /* __GNUC__ */
+
+#if     __GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 3)
+#define RPM_GNUC_MAY_ALIAS __attribute__((may_alias))
+#define RPM_GNUC_NONNULL( ... )	\
+  __attribute__((__nonnull__ (__VA_ARGS__)))
+#else
+#define RPM_GNUC_MAY_ALIAS
+#define RPM_GNUC_NONNULL( ... )
+#endif
+
+#if    __GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
+#define RPM_GNUC_WARN_UNUSED_RESULT 		\
+  __attribute__((warn_unused_result))
+#else
+#define RPM_GNUC_WARN_UNUSED_RESULT
+#endif /* __GNUC__ */
+
+#if    __GNUC__ >= 4 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 3)
+#  define RPM_GNUC_INTERNAL __attribute__((visibility("hidden")))
+#else
+#  define RPM_GNUC_INTERNAL
+#endif
+
+
+/* Guard C code in headers, while including them from C++ */
+#ifdef  __cplusplus
+# define RPM_BEGIN_DECLS  extern "C" {
+# define RPM_END_DECLS    }
+#else
+# define RPM_BEGIN_DECLS
+# define RPM_END_DECLS
+#endif
+
 /** \ingroup rpmts
  * The RPM Transaction Set.
  * Transaction sets are inherently unordered! RPM may reorder transaction
