--- rpm-5.4.15/lib/psm.c.init_pw_gr~	2015-01-03 13:13:27.154419714 +0100
+++ rpm-5.4.15/lib/psm.c	2015-01-03 13:24:24.136256730 +0100
@@ -3367,13 +3367,11 @@ assert(psm->te != NULL);
 	    static int _gr_loaded = 0;
 
 	    if (!_pw_loaded) {
-		(void)getpwnam("root");
-		endpwent();
+		setpwent();
 		_pw_loaded++;
 	    }
 	    if (!_gr_loaded) {
-		(void)getgrnam("root");
-		endgrent();
+		setgrent();
 		_gr_loaded++;
 	    }
 
@@ -3381,6 +3379,12 @@ assert(psm->te != NULL);
 	    /*@-modobserver@*/
 	    if (rootDir != NULL && strcmp(rootDir, "/") && *rootDir == '/')
 		rc = (rpmRC) Chroot(rootDir);
+	    /* close passwd & group database (of previous non-chroot environment)
+	     * in order for it to be reloaded on request within new root
+	     */
+	    endpwent();
+	    endgrent();
+
 	    /*@=modobserver@*/
 	    F_SET(psm, CHROOTDONE);
 	    (void) rpmtsSetChrootDone(ts, 1);
@@ -3394,6 +3398,16 @@ assert(psm->te != NULL);
 	    /*@-modobserver@*/
 	    if (rootDir != NULL && strcmp(rootDir, "/") && *rootDir == '/')
 		rc = (rpmRC) Chroot(".");
+	    /* close passwd & group database (of previous non-chroot environment)
+	     * in order for it to be reloaded on request within new root
+	     * XXX: not sure if needed, but by applying the logic of whenever
+	     * changing root, passwd & group should be reloaded for that
+	     * environment, it seems like the correct thing to do for
+	     * consistency and just to be on the safe side
+	     */
+	    endpwent();
+	    endgrent();
+
 	    /*@=modobserver@*/
 	    F_CLR(psm, CHROOTDONE);
 	    (void) rpmtsSetChrootDone(ts, 0);
