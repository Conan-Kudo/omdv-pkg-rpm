--- rpm-5.4.14/macros/mandriva.in.multithread~	2014-02-12 18:38:16.514439100 +0100
+++ rpm-5.4.14/macros/mandriva.in	2014-02-12 18:38:16.514439100 +0100
@@ -124,6 +124,7 @@ end\
 
 # use XZ to compress binary packages:
 %_binary_payload			w.xzdio
+%_xz_threads				-1
 
 %_duplicate_files_terminate_build	1
 %_unpackaged_subdirs_terminate_build	1
--- rpm-5.4.14/rpmio/xzdio.c.multithread~	2012-04-15 23:20:53.000000000 +0200
+++ rpm-5.4.14/rpmio/xzdio.c	2014-02-12 20:03:33.424406283 +0100
@@ -10,6 +10,8 @@
 
 #if defined(WITH_XZ)
 
+#define LZMA_UNSTABLE
+
 /* provide necessary defines for inclusion of <lzma.h>
    similar to LZMAUtils's internal <common.h> and as
    explicitly stated in the top-level comment of <lzma.h> */
@@ -68,6 +70,8 @@ static XZFILE *xzopen_internal(const cha
     XZFILE *xzfile;
     lzma_stream tmp;
     lzma_ret ret;
+    int threads = rpmExpandNumeric("%{_xz_threads}");
+    uint64_t mem_limit = rpmExpandNumeric("%{_xz_memlimit}");
 
     for (; *mode != '\0'; mode++) {
 	if (*mode == 'w')
@@ -93,9 +97,25 @@ static XZFILE *xzopen_internal(const cha
     xzfile->eof = 0;
     tmp = (lzma_stream)LZMA_STREAM_INIT;
     xzfile->strm = tmp;
+
     if (encoding) {
 	if (xz) {
+	    if (!threads) {
 	    ret = lzma_easy_encoder(&xzfile->strm, level, LZMA_CHECK_CRC32);
+	    } else {
+		if (threads == -1)
+		    threads = sysconf(_SC_NPROCESSORS_ONLN);
+		lzma_mt mt_options = {
+		    .flags = 0,
+		    .threads = threads,
+		    .block_size = 0,
+		    .timeout = 0,
+		    .preset = level,
+		    .filters = NULL,
+		    .check = LZMA_CHECK_CRC32 };
+
+		ret = lzma_stream_encoder_mt(&xzfile->strm, &mt_options);
+	    }
 	} else {
 	    lzma_options_lzma options;
 	    (void) lzma_lzma_preset(&options, level);
@@ -105,9 +125,22 @@ static XZFILE *xzopen_internal(const cha
 	/* We set the memlimit for decompression to 100MiB which should be
 	 * more than enough to be sufficient for level 9 which requires 65 MiB.
 	 */
-	ret = lzma_auto_decoder(&xzfile->strm, 100<<20, 0);
+	ret = lzma_auto_decoder(&xzfile->strm, mem_limit ? mem_limit : 100<<20, 0);
     }
     if (ret != LZMA_OK) {
+	switch (ret) {
+	    case LZMA_MEM_ERROR:
+		rpmlog(RPMLOG_ERR, "liblzma: Memory allocation failed");
+		break;
+
+	    case LZMA_DATA_ERROR:
+		rpmlog(RPMLOG_ERR, "liblzma: File size limits exceeded");
+		break;
+
+	    default:
+		rpmlog(RPMLOG_ERR, "liblzma: <Unknown error (%d), possibly a bug", ret);
+		break;
+	}
 	(void) fclose(fp);
 	memset(xzfile, 0, sizeof(*xzfile));
 	free(xzfile);
