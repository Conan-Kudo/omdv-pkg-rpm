--- rpm-5.4.10/macros/mandriva.in.drop_asneededhack~	2013-01-23 01:40:12.070347991 +0100
+++ rpm-5.4.10/macros/mandriva.in	2013-01-23 02:36:58.770902725 +0100
@@ -206,8 +206,8 @@ export CFLAGS="%optflags -fPIE"; export
 %build_sysmacrospath() %{_sys_macros_dir}/%{?1:%{1}}%{?!1:%{name}}.macros
 
 # when %_with_git_repository is set, these macros modify the behaviour of "%prep" step:
-%_after_setup %{?_with_git_repository:GIT_URL="%{?git_url}" GIT_REPOSITORY_CACHE=%{?git_repository_cache} @USRLIBRPM@/@RPMCANONVENDOR@/git-repository--after-tarball}
-%_patch %{?_with_git_repository:PKG_NAME=%{name} @USRLIBRPM@/@RPMCANONVENDOR@/git-repository--apply-patch}%{?!_with_git_repository:%__patch -U}
+%_after_setup %{?_with_git_repository:GIT_URL="%{?git_url}" GIT_REPOSITORY_CACHE=%{?git_repository_cache} @USRLIBRPM@/git-repository--after-tarball}
+%_patch %{?_with_git_repository:PKG_NAME=%{name} @USRLIBRPM@/git-repository--apply-patch}%{?!_with_git_repository:%__patch -U}
 
 # used by "git-repository--after-tarball":
 %git_repository_cache %_topdir/%{name}.git
@@ -274,9 +274,6 @@ Group: %{group}\
 # Use internal dependency generator rather than external helpers?
 %_use_internal_dependency_generator	1
 
-%__find_provides	@USRLIBRPM@/@RPMCANONVENDOR@/filter.sh '%{?_provides_exceptions:%{_provides_exceptions}}%{!?_provides_exceptions: }' '%{?_exclude_files_from_autoprov:%{_exclude_files_from_autoprov}}%{!?_exclude_files_from_autoprov: }' '%{buildroot}' @USRLIBRPM@/@RPMCANONVENDOR@/find-provides
-%__find_requires	@USRLIBRPM@/@RPMCANONVENDOR@/filter.sh '%{?_requires_exceptions:%{_requires_exceptions}}%{!?_requires_exceptions: }' '%{?_exclude_files_from_autoreq:%{_exclude_files_from_autoreq}}%{!?_exclude_files_from_autoreq: }' '%{buildroot}' @USRLIBRPM@/@RPMCANONVENDOR@/find-requires %{?buildroot:%{buildroot}} %{?_target_cpu:%{_target_cpu}}
-
 # Update Menu
 %_update_menus_bin %{_bindir}/update-menus
 
@@ -343,10 +340,6 @@ GCONF_CONFIG_SOURCE=`%{_gconftool_bin} -
 #	(Note: Above is the goal, below are the macros under development)
 #
 
-%__fix_libtool_ltmain_from_overlinking @USRLIBRPM@/@RPMCANONVENDOR@/fix-libtool-ltmain-from-overlinking
-%__fix_libtool_from_moving_options_after_libs @USRLIBRPM@/@RPMCANONVENDOR@/fix-libtool-from-moving-options-after-libs
-%__fix_dlsearch_path_in_libtool_for_multilib @USRLIBRPM@/@RPMCANONVENDOR@/fix-dlsearch-path-in-libtool-for-multilib
-
 %__libtoolize_configure %{?__libtoolize:(cd $CONFIGURE_TOP; [ ! -f configure.in -a ! -f configure.ac ] || %{__libtoolize} --copy --force)}
 
 %ldflags %{?!_disable_ld_as_needed: -Wl,--as-needed}%{?!_disable_ld_no_undefined: -Wl,--no-undefined}%{?!_disable_ld_relro: -Wl,-z,relro}%{?!_disable_ld_O1: -Wl,-O1}%{?!_disable_ld_build_id: -Wl,--build-id}%{?!_disable_ld_enable_new_dtags: -Wl,--enable-new-dtags}%{?!_disable_hash_style_gnu: -Wl,--hash-style=gnu}%{?_hardened_flags: %_hardened_flags}
@@ -372,12 +365,7 @@ GCONF_CONFIG_SOURCE=`%{_gconftool_bin} -
 
 %before_configure \
   %setup_compile_flags \
-  CONFIGURE_TOP="${CONFIGURE_TOP:-.}"; \
-  %{?!_disable_ld_as_needed:@USRLIBRPM@/@RPMCANONVENDOR@/force-as-needed-for-shared-lib-in-libtool ;} \
-  %{?!_disable_ld_no_undefined:@USRLIBRPM@/@RPMCANONVENDOR@/drop-ld-no-undefined-for-shared-lib-modules-in-libtool ;} \
-  %{__fix_libtool_ltmain_from_overlinking} ; \
-  %{__fix_libtool_from_moving_options_after_libs} $CONFIGURE_TOP ; \
-  %{__fix_dlsearch_path_in_libtool_for_multilib} $CONFIGURE_TOP %{_lib}
+  CONFIGURE_TOP="${CONFIGURE_TOP:-.}"
 
 # This is an improved version of %configure (from PLD team).
 %configure \
